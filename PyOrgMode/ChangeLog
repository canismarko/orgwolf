
0.03a
- External changes
   Objects (Schedule, Clock, Drawer, Table, Node) are now called OrgSchedule, OrgClock, OrgDrawer, OrgTable, OrgNode to avoid conflicts
   OrgSchedule: Added the support for combo lines (SCHEDULED+DEADLINE+CLOSED)
   OrgClock: Now uses the new OrgDate class
   DataStructure is now called OrgDataStructure
- Internal changes
   Restructuration of the .org tangling-file (Document, Code and Tests sections for each kind of class)
   Restructuration of Plugin and Elements system (mainly to keep the indentation)
   OrgDate: A new class for managing date and times (and active/inactive time-date formats)
   Included the patch from KAIHOLA Antti about a wrong parenting bug
- Documentation
   Added some details about functions (a lot of work remains)
- Tests
   Added the test from KAIHOLA Antti for the parser
   Added the different test tools from KAIGOLA Antti (like test_simple-agenda updated to use unittest)
- Python compliance
   Added the minimal setup file of KAIHOLA Antti
0.02b
- External changes
   Added the patch from KAIHOLA Antti about time format.
0.02a
- External changes
   Added a Clock plugin in order to manage CLOCK: elements
      Thank to "siberianlaika" for the idea
   Added a TYPE attribute to the different OrgPlugins elements
      Maybe we should find a more practical way than this one
   Removed some debug "prints"
   Indentation problem that causes wrong reparenting
      Thanks to Matthew Robison for his patch
   Added a append_clean function to Node class
      This function is used to add a tree to a node
      A call to reparent_cleanlevels is done at the end
   Added reparent_cleanlevels to Node class
      This function reparent all the elements. Using a 
      content to parent way of doing. It checks the content
      of the first element (call it E), and set the parent of
      each E-childs to E. This is really useful when moving
      one tree to another place.
   Loading the default plugins in the Node class init.
      This avoids to do it in the load_from_file (which was a 
      bad idea).
   Added a new example 
      using the TYPE attribute and append_clean.
0.01j
- External changes
   Added load_plugin function to DataStructure
0.01i
- Internal changes
   Renamed Plugin class to OrgPlugin
   Added close function to plugins
   Adding Table cells subdivision (easier editing)
- PyOrgMode.org Structure change
   Added test.py in the document
0.01h
- Internal changes
   Added Plugin system (simplifying the main loop of DataStructure)
   The DataStructure class is now an OrgElement
- External changes
   Node,Table,Drawer and Schedule are now plugins.
    Their object method is now joined by PluginName.Element
- New elements
   Added Table element (as a Plugin)
0.01g
- Changed elements
   Node : Added priority management
0.01f
- New elements
   Added Schedule element for 'DEADLINE: and 'SCHEDULED:
- Optimizations
   Class DataStructure : Trying to simplify the Reg exps
