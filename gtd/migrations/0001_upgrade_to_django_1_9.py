# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2018-11-21 21:48
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Context',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='FocusArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public', models.BooleanField(default=False)),
                ('display', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('is_visible', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True)),
                ('slug', models.SlugField()),
                ('archived', models.BooleanField(default=False)),
                ('text', models.TextField(blank=True)),
                ('scheduled_time', models.TimeField(blank=True, null=True)),
                ('scheduled_date', models.DateField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('deadline_time', models.TimeField(blank=True, null=True)),
                ('deadline_date', models.DateField(blank=True, null=True)),
                ('opened', models.DateTimeField(auto_now_add=True, null=True)),
                ('closed', models.DateTimeField(blank=True, null=True)),
                ('repeats', models.BooleanField(default=False)),
                ('repeating_number', models.IntegerField(blank=True, null=True)),
                ('repeating_unit', models.CharField(blank=True, choices=[('d', 'Days'), ('w', 'Weeks'), ('m', 'Months'), ('y', 'Years')], max_length=1, null=True)),
                ('repeats_from_completion', models.BooleanField(default=False)),
                ('priority', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C')], default='B', max_length=1)),
                ('tag_string', models.TextField(blank=True)),
                ('energy', models.CharField(blank=True, choices=[('High', 'HI'), ('Low', 'LO')], max_length=2, null=True)),
                ('time_needed', models.CharField(blank=True, choices=[('High', 'HI'), ('Low', 'LO')], max_length=4, null=True)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NodeRepetition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Priority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority_value', models.IntegerField(default=50)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display', models.CharField(max_length=100)),
                ('tag_string', models.CharField(max_length=10, unique=True)),
                ('public', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='TodoState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_size', models.IntegerField(default=0)),
                ('abbreviation', models.CharField(max_length=10, unique=True)),
                ('display_text', models.CharField(max_length=30)),
                ('actionable', models.BooleanField(default=True)),
                ('closed', models.BooleanField(default=False)),
                ('order', models.IntegerField(default=50)),
                ('_color_rgb', models.IntegerField(default=0)),
                ('_color_alpha', models.FloatField(default=0)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('tag_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gtd.Tag')),
                ('f_name', models.CharField(max_length=50)),
                ('l_name', models.CharField(max_length=50)),
            ],
            bases=('gtd.tag',),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('tag_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gtd.Tag')),
            ],
            bases=('gtd.tag',),
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('tag_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gtd.Tag')),
            ],
            bases=('gtd.tag',),
        ),
    ]
